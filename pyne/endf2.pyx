################################################
#                 WARNING!                     #
# This file has been auto-generated by xdress. #
# Do not modify!!!                             #
#                                              #
#                                              #
#                    Come on, guys. I mean it! #
################################################
"""
"""
cimport dtypes
cimport endf2
cimport endf_mt
cimport numpy as np
cimport stlcontainers
from libc.stdlib cimport free
from libc.stdlib cimport malloc
from libcpp.map cimport map as cpp_map
from libcpp.string cimport string as std_string
from libcpp.vector cimport vector as cpp_vector
from pyne cimport cpp_endf2
from pyne cimport cpp_endf_mt

import collections
import dtypes
import endf_mt
import numpy as np
import stlcontainers

np.import_array()



cdef class library:
    """no docstring for {'sidecars': (), 'tarbase': 'endf2', 'tarname': 'library', 'language': 'c++', 'srcname': 'library', 'incfiles': ('endf.h',), 'srcfiles': ('cpp/endf.cpp', 'cpp/endf.h')}, please file a bug report!"""



    # constuctors
    def __cinit__(self, *args, **kwargs):
        self._inst = NULL
        self._free_inst = True

        # cached property defaults
        self._contents = None

    def __init__(self, ):
        """library(self, )
        """
        self._inst = new cpp_endf2.library()
    
    
    def __dealloc__(self):
        if self._free_inst and self._inst is not NULL:
            free(self._inst)

    # attributes
    property contents:
        """no docstring for contents, please file a bug report!"""
        def __get__(self):
            cdef stlcontainers._Mapendf_idmt_base contents_proxy
            if self._contents is None:
                contents_proxy = stlcontainers.Mapendf_idmt_base(False, False)
                contents_proxy.map_ptr = &(<cpp_endf2.library *> self._inst).contents
                self._contents = contents_proxy
            return self._contents
    
        def __set__(self, value):
            cdef stlcontainers._Mapendf_idmt_base value_proxy
            value_proxy = stlcontainers.Mapendf_idmt_base(value, not isinstance(value, stlcontainers._Mapendf_idmt_base))
            (<cpp_endf2.library *> self._inst).contents = value_proxy.map_ptr[0]
            self._contents = None
    
    
    # methods
    def get_content_list(self, ):
        """get_content_list(self, )
        no docstring for get_content_list, please file a bug report!"""
        cdef cpp_vector[cpp_vector[int]] rtnval
        
        cdef np.npy_intp rtnval_proxy_shape[1]
        rtnval = (<cpp_endf2.library *> self._inst).get_content_list()
        rtnval_proxy_shape[0] = <np.npy_intp> rtnval.size()
        rtnval_proxy = np.PyArray_SimpleNewFromData(1, rtnval_proxy_shape, np.NPY_INT32, &rtnval[0])
        rtnval_proxy = np.PyArray_Copy(rtnval_proxy)
        return rtnval_proxy
    
    
    def read_endf(self, filenm):
        """read_endf(self, filenm)
        no docstring for read_endf, please file a bug report!"""
        cdef char * filenm_proxy
        filenm_bytes = filenm.encode()
        (<cpp_endf2.library *> self._inst).read_endf(std_string(<char *> filenm_bytes))
    
    
    

    pass





cdef class endf_id:
    """no docstring for {'sidecars': (), 'tarbase': 'endf2', 'tarname': 'endf_id', 'language': 'c++', 'srcname': 'endf_id', 'incfiles': ('endf.h',), 'srcfiles': ('cpp/endf.cpp', 'cpp/endf.h')}, please file a bug report!"""



    # constuctors
    def __cinit__(self, *args, **kwargs):
        self._inst = NULL
        self._free_inst = True

        # cached property defaults


    def __init__(self, ):
        """endf_id(self, )
        """
        self._inst = malloc(sizeof(cpp_endf2.endf_id))
        (<cpp_endf2.endf_id *> self._inst)[0] = cpp_endf2.endf_id()
    
    
    def __dealloc__(self):
        if self._free_inst and self._inst is not NULL:
            free(self._inst)

    # attributes
    property mat:
        """no docstring for mat, please file a bug report!"""
        def __get__(self):
            return int((<cpp_endf2.endf_id *> self._inst).mat)
    
        def __set__(self, value):
            (<cpp_endf2.endf_id *> self._inst).mat = <int> value
    
    
    property mf:
        """no docstring for mf, please file a bug report!"""
        def __get__(self):
            return int((<cpp_endf2.endf_id *> self._inst).mf)
    
        def __set__(self, value):
            (<cpp_endf2.endf_id *> self._inst).mf = <int> value
    
    
    property mt:
        """no docstring for mt, please file a bug report!"""
        def __get__(self):
            return int((<cpp_endf2.endf_id *> self._inst).mt)
    
        def __set__(self, value):
            (<cpp_endf2.endf_id *> self._inst).mt = <int> value
    
    
    # methods
    

    pass






{'cpppxd_footer': '', 'pyx_header': '', 'pxd_header': '', 'pxd_footer': '', 'cpppxd_header': '', 'pyx_footer': ''}
